{
  "fileTypes": [
    ".asm",
    ".inc",
    ".s",
    ".a",
    ".lib",
    ".kick",
    ".ka",
    ".src"
  ],
  "name": "KickAssembler (C64)",
  "patterns": [
    {
      "match": "\\b(adc|and|asl|bit|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|sbc|sec|sed|sei|sta|stx|sty|tax|txa|tay|tya|tsx|txs)\\b",
      "name": "keyword"
    },
    {
      "match": "\\b(aac|aax|ahx|alr|anc|anc2|ane|arr|aso|asr|atx|axa|axs|dcm|dcp|dop|hlt|ins|isb|isc|jam|kil|lae|lar|las|lds|lax|lse|lxa|oal|rla|rra|sax|sbc2|sbx|skb|sha|shs|say|shx|shy|slo|skw|sre|sxa|sya|tas|top|xaa|xas)\\b",
      "name": "invalid.illegal"
    },
    {
      "match": "\\b(bcc|bcs|beq|bmi|bne|bpl|brk|bvc|bvs|jmp|jsr|rti|rts)\\b",
      "name": "keyword.control"
    },
    {
      "match": "\\b(bra|sac|sir)\\b",
      "name": "keyword.other"
    },
    {
      "match": "\\b(bbr0|bbr1|bbr2|bbr3|bbr4|bbr5|bbr6|bbr7|bbs0|bbs1|bbs2|bbs3|bbs4|bbs5|bbs6|bbs7|phx|phy|plx|ply|rmb0|rmb1|rmb2|rmb3|rmb4|rmb5|rmb6|rmb7|smb0|smb1|smb2|smb3|smb4|smb5|smb6|smb7|stp|stz|trb|tsb|wai)\\b",
      "name": "keyword.control"
    },
    {
      "match": "\\b(asr|asw|cle|cpz|dew|dez|eom|inw|inz|lbcc|lbcs|lbeq|lbmi|lbne|lbpl|lbra|lbsr|lbvc|lbvs|ldz|map|neg|phw|phz|plz|row|rtn|see|tab|taz|tba|tsy|tys|tza)\\b",
      "name": "keyword.other"
    },
    {
      "match": "\\b(adcq|andq|aslq|asrq|bitq|cpq|deq|eorq|inq|ldq|lsrq|orq|rolq|rorq|sbcq|stq)\\b",
      "name": "keyword.other"
    },
    {
      "begin": "/\\*",
      "captures": {
        "0": {
          "name": "punctuation.definition.comment"
        }
      },
      "end": "\\*/\\n?",
      "name": "comment.block"
    },
    {
      "begin": "//",
      "captures": {
        "1": {
          "name": "punctuation.definition.comment"
        }
      },
      "end": "$\\n?",
      "name": "comment.line.double-slashs"
    },
    {
      "captures": {
        "1": {
          "name": "storage.type.kickass"
        }
      },
      "match": "(?:^|\\s)(\\.(word|wo|byte|text|te|dword|by|dw|zp))\\b"
    },
    {
      "match": "\\b(CmdArgument)\\b",
      "name": "storage.type.kickass"
    },
    {
      "match": "\\b(getNamespace)\\b",
      "name": "support.function.language"
    },
    {
      "match": "\\b(toIntString|toBinaryString|toOctalString|toHexString)\\b",
      "name": "support.function.string"
    },
    {
      "captures": {
        "1": {
          "name": "support.function.string"
        }
      },
      "match": "[a-zA-Z0-9_)]\\.([a-zA-Z_][a-zA-Z0-9_]+)\\("
    },
    {
      "match": "\\b(abs|acos|asin|atan|atan2|cbrt|ceil|cos|cosh|exp|expm1|floor|hypot|IEEEremainder|log|log10|log1p|max|min|pow|mod|random|round|signum|sin|sinh|sqrt|tan|tanh|toDegrees|toRadians)\\b",
      "name": "support.function.math"
    },
    {
      "match": "\\b(LoadBinary|LoadPicture|LoadSid|createFile)\\b",
      "name": "support.function.file"
    },
    {
      "match": "\\b(Matrix|RotationMatrix|ScaleMatrix|MoveMatrix|PerspectiveMatrix|Vector)\\b",
      "name": "support.function.3d"
    },
    {
      "captures": {
        "1": {
          "name": "storage.type.keyword.kickass.field"
        }
      },
      "match": "(?:^|\\s)(\\.(var|label|const))\\b"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.kickass.function.object"
        }
      },
      "match": "(?:^|\\s)(\\.(struct|enum|define))\\b"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.kickass.function"
        }
      },
      "match": "(?:^|\\s)(\\.(eval|fill|break|print|printnow|import|align|assert|asserterror|error|errorif|lohifill|fillword))\\b"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.kickass"
        }
      },
      "match": "(?:^|\\s)(\\.(pc|importonce|pseudopc|return|eval|cpu|disk|file|filemodify|segment|segmentdef|segmentout|memblock|modify|plugin))\\b"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.kickass"
        }
      },
      "match": "(?:^\\s*|;\\s*)(\\*)(?=\\s*\\=\\s*)"
    },
    {
      "match": "(?:^|\\s)(\\.(encoding))\\b",
      "name": "keyword.kickass.encoding"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.kickass.preprocessor"
        },
        "3": {
          "name": "constant.kickass.preprocessor"
        }
      },
      "match": "(?:^\\s*|;\\s*)(\\#(define|elif|if|undef))\\s+[!(\\s]*((@?[A-Za-z_][A-Za-z0-9_]*)+)\\b"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.kickass.preprocessor"
        }
      },
      "match": "(?:^\\s*|;\\s*)(\\#(else|endif|importonce))\\b"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.kickass.preprocessor"
        }
      },
      "match": "(?:^\\s*|;\\s*)(\\#(import))(?=\\s+\\\".*\\\")"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.kickass.preprocessor"
        },
        "3": {
          "name": "constant.kickass.preprocessor"
        }
      },
      "match": "(?:^\\s*|;\\s*)(\\#(importif))\\s+[!(\\s]*(@?([A-Za-z_][A-Za-z0-9_]*)+)(?=\\s+\\\".*\\\")"
    },
    {
      "match": "\\b(true|false)\\b",
      "name": "constant.language"
    },
    {
      "match": "\\b(BLACK|WHITE|RED|CYAN|PURPLE|GREEN|BLUE|YELLOW|ORANGE|BROWN|LIGHT_RED|DARK_GRAY|GRAY|DARK_GREY|GREY|LIGHT_GREEN|LIGHT_BLUE|LIGHT_GRAY|LIGHT_GREY)\\b",
      "name": "constant.language.color"
    },
    {
      "match": "\\b(LDY_IMM|LDY_ZP|LDY_ZPX|LDY_ABS|LDY_ABSX|LDX_IMM|LDX_ZP|LDX_ZPY|LDX_ABS|LDX_ABSY|DEC_ZP|DEC_ZPX|DEC_ABS|DEC_ABSX|ISC_ZP|ISC_ZPX|ISC_IZPX|ISC_IZPY|ISC_ABS|ISC_ABSX|ISC_ABSY|INS_ZP|INS_ZPX|INS_IZPX|INS_IZPY|INS_ABS|INS_ABSX|INS_ABSY|ISB_ZP|ISB_ZPX|ISB_IZPX|ISB_IZPY|ISB_ABS|ISB_ABSX|ISB_ABSY|EOR_IMM|EOR_ZP|EOR_ZPX|EOR_IZPX|EOR_IZPY|EOR_ABS|EOR_ABSX|EOR_ABSY|SBC2_IMM|JMP_ABS|JMP_IND|BIT_ZP|BIT_ABS|BVC_REL|BEQ_REL|AXS_IMM|SBX_IMM|DEX|BNE_REL|ALR_IMM|ASR_IMM|DEY|BRK|CLD|XAA_IMM|ANE_IMM|CLC|LAX_IMM|LAX_ZP|LAX_ZPY|LAX_IZPX|LAX_IZPY|LAX_ABS|LAX_ABSY|LXA_IMM|LXA_ZP|LXA_ZPY|LXA_IZPX|LXA_IZPY|LXA_ABS|LXA_ABSY|BVS_REL|RRA_ZP|RRA_ZPX|RRA_IZPX|RRA_IZPY|RRA_ABS|RRA_ABSX|RRA_ABSY|ADC_IMM|ADC_ZP|ADC_ZPX|ADC_IZPX|ADC_IZPY|ADC_ABS|ADC_ABSX|ADC_ABSY|STA_ZP|STA_ZPX|STA_IZPX|STA_IZPY|STA_ABS|STA_ABSX|STA_ABSY|CLI|CPX_IMM|CPX_ZP|CPX_ABS|TAX|CLV|CPY_IMM|CPY_ZP|CPY_ABS|TAY|ANC2_IMM|STX_ZP|STX_ZPY|STX_ABS|SLO_ZP|SLO_ZPX|SLO_IZPX|SLO_IZPY|SLO_ABS|SLO_ABSX|SLO_ABSY|STY_ZP|STY_ZPX|STY_ABS|SHX_ABSY|BCC_REL|SHY_ABSX|CMP_IMM|CMP_ZP|CMP_ZPX|CMP_IZPX|CMP_IZPY|CMP_ABS|CMP_ABSX|CMP_ABSY|JSR_ABS|LSR|LSR_ZP|LSR_ZPX|LSR_ABS|LSR_ABSX|ROL|ROL_ZP|ROL_ZPX|ROL_ABS|ROL_ABSX|NOP|NOP_IMM|NOP_ZP|NOP_ZPX|NOP_ABS|NOP_ABSX|SEC|BCS_REL|SED|ROR|ROR_ZP|ROR_ZPX|ROR_ABS|ROR_ABSX|AHX_IZPY|AHX_ABSY|SHA_IZPY|SHA_ABSY|AND_IMM|AND_ZP|AND_ZPX|AND_IZPX|AND_IZPY|AND_ABS|AND_ABSX|AND_ABSY|SEI|ANC_IMM|TSX|TXA|LAS_ABSY|LAE_ABSY|LDS_ABSY|ORA_IMM|ORA_ZP|ORA_ZPX|ORA_IZPX|ORA_IZPY|ORA_ABS|ORA_ABSX|ORA_ABSY|INC_ZP|INC_ZPX|INC_ABS|INC_ABSX|BPL_REL|ARR_IMM|PLA|RTI|RLA_ZP|RLA_ZPX|RLA_IZPX|RLA_IZPY|RLA_ABS|RLA_ABSX|RLA_ABSY|SRE_ZP|SRE_ZPX|SRE_IZPX|SRE_IZPY|SRE_ABS|SRE_ABSX|SRE_ABSY|LDA_IMM|LDA_ZP|LDA_ZPX|LDA_IZPX|LDA_IZPY|LDA_ABS|LDA_ABSX|LDA_ABSY|PHA|SAX_ZP|SAX_ZPY|SAX_IZPX|SAX_ABS|DCP_ZP|DCP_ZPX|DCP_IZPX|DCP_IZPY|DCP_ABS|DCP_ABSX|DCP_ABSY|DCM_ZP|DCM_ZPX|DCM_IZPX|DCM_IZPY|DCM_ABS|DCM_ABSX|DCM_ABSY|TXS|RTS|INX|SBC_IMM|SBC_ZP|SBC_ZPX|SBC_IZPX|SBC_IZPY|SBC_ABS|SBC_ABSX|SBC_ABSY|INY|PLP|PHP|ASL|ASL_ZP|ASL_ZPX|ASL_ABS|ASL_ABSX|TAS_ABSY|SHS_ABSY|TYA|BMI_REL)\\b",
      "name": "constant.language.opcodes"
    },
    {
      "match": "\\b(BF_C64FILE|BF_BITMAP_SINGLECOLOR|BF_KOALA|BF_FLI)\\b",
      "name": "constant.language.file"
    },
    {
      "match": "\\b(_6502NoIllegals|_6502|dtv|_65c02|_65ce02|_45gs02)\\b",
      "name": "constant.language.cpu"
    },
    {
      "match": "\\b(AT_ABSOLUTE|AT_ABSOLUTEX|AT_ABSOLUTEY|AT_IMMEDIATE|AT_INDIRECT|AT_IZEROPAGEX|AT_IZEROPAGEY|AT_NONE)\\b",
      "name": "constant.language.pseudocommand"
    },
    {
      "match": "\\b(PI|E)\\b",
      "name": "constant.language.math"
    },
    {
      "match": "\\b(Hashtable)\\b",
      "name": "storage.type.hashtable"
    },
    {
      "captures": {
        "1": {
          "name": "storage.type.list"
        },
        "2": {
          "name": "variable.parameter"
        }
      },
      "match": "\\b(list|List)\\(\\s*(\\$?\\d+)*\\s*\\)"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.control.for"
        },
        "2": {
          "name": "storage.type.for"
        }
      },
      "match": "(?:^|\\s)(\\.for)\\s*\\(\\s*(var)?"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.control.if"
        }
      },
      "match": "(?:^|\\s)((\\.if)\\b|(else)\\b)"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.control.while"
        }
      },
      "match": "(?:^|\\s)(\\.while)(?=\\s*\\(.*\\))"
    },
    {
      "begin": "\"",
      "end": "\"",
      "name": "string.quoted.double.untitled",
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape"
        }
      ]
    },
    {
      "captures": {
        "1": {
          "name": "meta.filenamespace.identifier"
        },
        "2": {
          "name": "keyword.type.filenamespace"
        },
        "3": {
          "name": "entity.name.filenamespace"
        }
      },
      "match": "(?:^\\s*|;\\s*)((\\.filenamespace)\\s*([A-Za-z_][A-Za-z0-9_]*))\\b"
    },
    {
      "captures": {
        "1": {
          "name": "meta.namespace.identifier"
        },
        "2": {
          "name": "keyword.type.namespace"
        },
        "3": {
          "name": "entity.name.namespace"
        }
      },
      "match": "(?:^\\s*|;\\s*)((\\.namespace)\\s*([A-Za-z_][A-Za-z0-9_]*))\\b"
    },
    {
      "captures": {
        "1": {
          "name": "meta.label.identifier"
        },
        "2": {
          "name": "entity.name.label"
        }
      },
      "match": "(?:^\\s*|;\\s*)(((!)|(!?(\\@*[A-Za-z_][A-Za-z0-9_]*)+))\\:)",
      "name": "label"
    },
    {
      "captures": {
        "1": {
          "name": "meta.pseudocommand.identifier"
        },
        "2": {
          "name": "storage.type.pseudocommand"
        },
        "3": {
          "name": "entity.name.pseudocommand"
        }
      },
      "match": "(?:^\\s*|;\\s*)((\\.pseudocommand)\\s*(\\@*[A-Za-z_][A-Za-z0-9_]*))\\b"
    },
    {
      "captures": {
        "1": {
          "name": "meta.label.identifier"
        },
        "2": {
          "name": "storage.type.function"
        },
        "3": {
          "name": "entity.name.function"
        }
      },
      "match": "(?:^\\s*|;\\s*)((\\.function)\\s*(\\@*[A-Za-z0-9_]*))\\b"
    },
    {
      "captures": {
        "1": {
          "name": "meta.macro.identifier"
        },
        "2": {
          "name": "storage.type.macro"
        },
        "3": {
          "name": "entity.name.macro"
        }
      },
      "match": "(?:^\\s*|;\\s*)((\\.macro)\\s*(\\@*[A-Za-z_][A-Za-z0-9_]*))\\b"
    },
    {
      "match": "#?\\$\\h+",
      "name": "constant.numeric.hex"
    },
    {
      "match": "\\b\\d+",
      "name": "constant.numeric.decimal"
    },
    {
      "match": "\\#?%[01]+",
      "name": "constant.numeric.binary"
    }
  ],
  "scopeName": "source.assembly.kickassembler",
  "uuid": "107f6c61-6808-4778-893e-8fb1cbb81f30"
}